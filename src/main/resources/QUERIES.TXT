

      clients/{id}/accounts/{id}/cards/{id}

      clients/cards/new/?id=1

      clients/cards/balance/?id=1

      clients/cards/all/?login=RITA

      clients\/\d{1,}

      try {
                  Statement statement = con.createStatement();
                  statement.executeUpdate("DROP TABLE IF EXISTS CARD; " +
                          "DROP TABLE IF EXISTS ACCOUNT; " +
                          "DROP TABLE IF EXISTS CLIENT;");

                  statement.executeUpdate("create table if not exists CLIENT" +
                          "(ID INT auto_increment " +
                          "primary key," +
                          "LOGIN VARCHAR(15) not null);" +
                          "create unique index if not exists CLIENT_LOGIN_UINDEX " +
                          "on CLIENT (LOGIN);");

                  statement.executeUpdate("create table if not exists ACCOUNT" +
                          "(ID BIGINT auto_increment," +
                          "NUMBER VARCHAR(25)," +
                          "BALANCE DECIMAL not null," +
                          "CLIENT_ID BIGINT not null " +
                          "references CLIENT (ID)," +
                          "constraint ACCOUNT_PK " +
                          "primary key (ID)); " +
                          "create unique index if not exists ACCOUNT_CLIENT_ID_UINDEX " +
                          "on ACCOUNT (CLIENT_ID); " +
                          "create unique index if not exists ACCOUNT_NUMBER_UINDEX " +
                          "on ACCOUNT (NUMBER);");

                  statement.executeUpdate("create table if not exists CARD " +
                          "(ID BIGINT auto_increment," +
                          "NUMBER VARCHAR(16) not null," +
                          "ACCOUNT_ID BIGINT not null," +
                          "constraint CARD_PK " +
                          "primary key (ID)," +
                          "constraint FK_ACCOUNT_ID " +
                          "foreign key (ACCOUNT_ID) references ACCOUNT (ID));" +
                          "create unique index if not exists CARD_NUMBER_UINDEX " +
                          "on CARD (NUMBER);");


                  statement.executeUpdate("INSERT INTO CLIENT (LOGIN) VALUES ( 'RITA'); " +
                          "INSERT INTO CLIENT (LOGIN) VALUES ( 'JOHN');" +
                          "INSERT INTO CLIENT (LOGIN) VALUES ( 'VASYA')");

                  statement.executeUpdate("INSERT INTO ACCOUNT (NUMBER, BALANCE, CLIENT_ID) VALUES ( '8888', 12.5, 1 ); " +
                          "INSERT INTO ACCOUNT (NUMBER, BALANCE, CLIENT_ID) VALUES ('9999', 340.6, 2)");

                  statement.executeUpdate("INSERT INTO CARD(NUMBER, ACCOUNT_ID) VALUES ( '0000000000000000', 1 );" +
                          "INSERT INTO CARD(NUMBER, ACCOUNT_ID) VALUES ( '0000000000000001', 1 ); " +
                          "INSERT INTO CARD(NUMBER, ACCOUNT_ID) VALUES ( '0000000000000002', 2 ); " +
                          "INSERT INTO CARD(NUMBER, ACCOUNT_ID) VALUES ( '0000000000000003', 2 )");

                  statement.executeQuery("SELECT * FROM CARD");


                  {"cardNumberFrom":"0000000000000000","cardNumberTo":"0000000000000001","sum":12.5}